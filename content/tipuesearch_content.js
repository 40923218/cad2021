var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁. \n \xa0 \n 目前版本號: \n HomePage:1.1.7 \n HomeWork:1.5.6 \n \n 這裡是40923218的網站 \n 網站原始碼倉儲 \n 網站模板連結 \n 我的倉儲 \n 歷史更新內容 \n 其他與作者或作業相關資料說明或介紹 \n \n 版本號由來: \n Q:為什麼我會使用這個版本號? \n A:以這樣子的版本號代替我這次更新了甚麼東西，這可以讓我的版面更簡潔，我也有把更新內容打在網頁裡面，我認為觀看者可以透過我整理的版本更新裡面找出我在那些版本更新了甚麼。之後在推上Github時會多打上本次重點更新，其餘更新會照往常一樣整理在更新內容內，這樣觀看者可以在Github上面看到我主要更新內容外，在網頁上也能看到這次總共更新了哪些東西。', 'tags': '', 'url': 'About.html'}, {'title': '更新內容', 'text': 'HomePage: 首頁更新 \n HomeWork: 作業相關更新 \n 九月份更新 \n 9/25:HomePage1.0 \n (更新網頁Title、版本號說明、版本更新內容) \n \xa0 \n 十月份更新 \n 10/7:HomePage1.1 \n (編排About網址連結、新增Task頁面、HwPage、學員帳號) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 HomePage1.1.2 \n (更新Task>HwPage學員網站連結) \n \xa0 \n 10/18:HomPage1.1.3 \n (更新Task>HwPage學員Github帳號連結、Python程式解法、解說、心得) \n \xa0 \n 10/21:HomePage1.1.4 \n (更新Run，程式輸出區) \n \xa0 \n 10/23:HomeWork1.0 \n (更新HW1>CAD1、CAD2緣起與介紹) \n \xa0 \n 10/30:HomeWork1.1 \n (更新HW1>CAD1、CAD2安裝教學影片) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0 HomePage1.1.4_ReleaseNotes \n (更新:About>新增現行版本號由來) \n (新增:About>更新內容超連結、目前版本號) \n \xa0 \n 十一月份更新 \n 11/7:HomeWork1.2 \n (更新:HW1>CAD2(Inventor)操作流程、CAD2(Inventor)零件轉入coppeliasim) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 HomePage1.1.5 \n (修改:HW1分支名稱) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 HomeWork1.3 \n (更新 :HW1>CAD1(NX12.0)操作流程、CAD1(NX12.0)零件轉入coppeliasim ) \n \xa0 \n 11/25:HomePage1.1.6 \n (修改:HW1>CAD1、CAD2下載配置連結修改) \n \xa0 \n 11/29:HomeWork1.3.1 \n (更新:HW1-1>影片連結、目前所遇到之問題) \n \xa0 \n 十二月份更新 \n 12/1:HomeWork1.3.2 \n ( 更新:HW1-1>影片連結、連桿約束 ) \n \xa0 \n \xa0 \xa0 \xa0 \xa0HomeWork1.3.3 \n ( 更新:HW1-1>影片連結、自訂義腳本與約束問題 ) \n \xa0 \n 12/2:HomeWork1.4 \n (新增 :W11>連桿機構與運動場景(INV繪圖過程與運動模擬 ) ) \n \xa0 \xa0 \xa0 \xa0 HomeWork1.4.1 \n (更新 :W11>連桿機構與運動場景(INV繪圖過程與運動模擬Wink ) ) \n \xa0 \xa0 \xa0 \xa0 HomeWork1.4.2(Beta) \n (Wink測試) \n \xa0 \n 12/3:HomeWork1.4.2(Beta2) \n (Wink測試) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 HomeWork1.4.2(Beta3) \n (Wink上傳測試) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 HomeWork1.4.2 \n (更新:W11>連桿機構與運動場景(NX 繪圖過程Wink )) \n (修正:Wink均已修復) \n \xa0 \n 12/15:HomeWork1.4.3 \n (新增:W13>目前進度Wink) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 HomeWork1.4.4 \n (新增:W13>第一軸模擬Wink) \n \xa0 \n 12/16:HomeWork1.4.5 \n (新增:W13>二、三軸模擬Wink) \n \xa0 \n 12/30:HomeWork1.5 \n (新增:Final Project) \n \xa0 \n 1/05:HomeWork1.5.1 \n (修正:Final Project>Wink連結修正) \n \xa0\xa0 \n 1/06:HomeWork1.5.2 \n (新增:W16考試內容) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0HomeWoek1.5.3 \n (修正:Final Project>模擬過程影片連結) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0HomeWork1.5.4 \n (修正:Wink 影片連結) \n \xa0 \n \xa0 \xa0 \xa0 \xa0 \xa0HomeWork1.5.5 \n (新增:延伸題影片) \n \xa0 \n 1/12:HomeWork1.5.6 \n (新增:w17題目內容) \n \xa0 \n 1/13:HomePage1.1.7 \n (新增:h1期末考試)', 'tags': '', 'url': '更新內容.html'}, {'title': 'Task', 'text': '', 'tags': '', 'url': 'Task.html'}, {'title': 'HwPage', 'text': 'cad2b\xa0 \xa0 \xa0 \xa0 \xa0 github 網站\xa0 \xa0github倉儲 40723126\xa0 \xa0 40723126 \xa0  40723126 40723135\xa0 \xa0 40723135 \xa0  40723135 40723217\xa0 \xa0 40723217 \xa0  40723217 40732331\xa0 \xa0 40732331 \xa0  40732331 40823114\xa0 \xa0 40823114 \xa0  40823114 40823115\xa0 \xa0 40823115 \xa0  40823115 40823117\xa0 \xa0 40823117 \xa0  40823117 40823119\xa0 \xa0 40823119 \xa0  40823119 40823122\xa0 \xa0 40823122 \xa0  40823122 40823127\xa0 \xa0 40823127 \xa0  40823127 40823146\xa0 \xa0 40823146 \xa0  40823146 40823148\xa0 \xa0 40823148 \xa0  40823148 40823215\xa0 \xa0 40823215 \xa0  40823215 40871106\xa0 \xa0 40871106 \xa0  40871106 40923201\xa0 \xa0 40923201 \xa0  40923201 40923203\xa0 \xa0 40923203 \xa0  40923203 40923204\xa0 \xa0 40923204 \xa0  40923204 40923205\xa0 \xa0 40923205 \xa0  40923205 40923206\xa0 \xa0 40923206 \xa0  40923206 40923207\xa0 \xa0 40923207 \xa0  40923207 40923208\xa0 \xa0 40923208 \xa0  40923208 40923209\xa0 \xa0 40923209 \xa0  40923209 40923210\xa0 \xa0 40923210 \xa0  40923210 40923211\xa0 \xa0 40923211 \xa0  40923211 40923212\xa0 \xa0 40923212 \xa0  40923212 40923213\xa0 \xa0 40923213 \xa0  40923213 40923214\xa0 \xa0 40923214 \xa0  40923214 40923216\xa0 \xa0 40923216 \xa0  40923216 40923217\xa0 \xa0 40923217 \xa0  40923217 40923218\xa0 \xa0 40923218 \xa0  40923218 40923219\xa0 \xa0 40923219 \xa0  40923219 40923220\xa0 \xa0 40923220 \xa0  40923220 40923221\xa0 \xa0 40923221 \xa0  40923221 40923223\xa0 \xa0 40923223 \xa0  40923223 40923224\xa0 \xa0 40923224 \xa0  40923224 40923225\xa0 \xa0 40923225 \xa0  40923225 40923226\xa0 \xa0 40923226 \xa0  40923226 40923227\xa0 \xa0 40923227 \xa0  40923227 40923228\xa0 \xa0 40923228 \xa0  40923228 40923229\xa0 \xa0 40923229 \xa0  40923229 40923230\xa0 \xa0 40923230 \xa0  40923230 40923231\xa0 \xa0 40923231 \xa0  40923231 40923232\xa0 \xa0 40923232 \xa0  40923232 40923233\xa0 \xa0 40923233 \xa0  40923233 40923234\xa0 \xa0 40923234 \xa0  40923234 40923235\xa0 \xa0 40923235 \xa0  40923235 40923236\xa0 \xa0 40923236 \xa0  40923236 40923237\xa0 \xa0 40923237 \xa0  40923237 40923238\xa0 \xa0 40923238 \xa0  40923238 40923239\xa0 \xa0 40923239 \xa0  40923239 40923240\xa0 \xa0 40923240 \xa0  40923240 40923241\xa0 \xa0 40923241 \xa0  40923241 40923242\xa0 \xa0 40923242 \xa0  40923242 40923243\xa0 \xa0 40923243 \xa0  40923243 40923244\xa0 \xa0 40923244 \xa0  40923244 40923245\xa0 \xa0 40923245 \xa0  40923245 40923246\xa0 \xa0 40923246 \xa0  40923246 40923247\xa0 \xa0 40923247 \xa0  40923247 40923248\xa0 \xa0 40923248 \xa0  40923248 40923249\xa0 \xa0 40923249 \xa0  40923249 40923250\xa0 \xa0 40923250 \xa0  40923250 40923251\xa0 \xa0 40923251 \xa0  40923251 40923252\xa0 \xa0 40923252 \xa0  40923252 40923253\xa0 \xa0 40923253 \xa0  40923253 40971220\xa0 \xa0 40971220 \xa0  40971220 40971227\xa0 \xa0 40971227 \xa0  40971227 \n', 'tags': '', 'url': 'HwPage.html'}, {'title': '解法(含Python)', 'text': '#打開學員列表清單，並且轉換成列表\nwith open("cad2021_2b_w2_list.txt","r",encoding="UTF-8") as page:\n\tpage.readline()\n\tlines = page.read().splitlines()\n\nWeb = []\n\n#將列表內的學號和Github帳號轉導入網頁源碼裡面\nfor line in lines:\n    number, name = line.split("\\t")\n    link2 = f"https://{name}.github.io/cad2021_hw/content/index.html"\n    link = f"https://github.com/{name}/cad2021_hw"\n    st = f\'</strong><br/><strong>{number}\xa0 \xa0<a href="{link2}">{number}</a>\xa0 <a href="{link}">{number}</a></strong><br/><strong><br/></strong></span></p>\'\n    Web.append(st)\n\n#輸出網頁源碼\nfor url in Web:\n\tprint (url) \n 以上為程式碼，備註以上自行觀看 \n 我先將網頁源碼從content.htm裡面提出，我先在網頁裡面做出範本(下圖) \n \n content.htm在倉儲資料夾裡面的config裡面，將範本網頁源碼提出來後，放到程式碼裡面，再經由程式碼輸出(下圖) \n \n \n 最後放到content.htm裡面後，要注意不要放錯行(下圖) \n \n \n 最後刷新動態頁面(下圖) \n \n 痾...好吧，我不清楚為甚麼會有空格產生，這個以後有空我來研究看看 \n', 'tags': '', 'url': '解法(含Python).html'}, {'title': '心得', 'text': '我必須要先說，這個程式碼我是請教我會Python的朋友，讓他一步一步帶我的情況下所做出來的，後面再做些微修改(原本只有倉儲連結，我再多加網頁連結)，這是個不錯的學習，雖然目前沒有弄得很懂，但我希望能一步一步來，至少要打好基礎 \n 友人Github連結 \n', 'tags': '', 'url': '心得.html'}, {'title': 'HW1', 'text': 'HW1 佔學期成績 25% \n HW1 必須在 2021.11.10 22:00 之前完成. \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.11.10 22:00 關閉. \n 作業一: meArm Robot 零件繪圖與機電運動模擬場景製作 \n Step1 : 下載  meARM.7z  這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊. \n meArm_75-0040_v1.pdf  則是另外一本組立參考手冊. \n Step2 : 從課程網頁中的  Compile CoppeliaSim 頁面 , 下載  coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z  (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件. \n Step3 : 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,\xa0 經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件 匯入  CoppeliaSim 進行組裝配置後, 以  UI 介面 中的 slider 控制 meArm Robot 各軸的旋轉作動. \n 2b CAD 套件分配結果:  https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt \n 附件: \n 1. CAD 套件分配表: \n sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace \n 2a 套件亂數分配結果 \n 2b 套件亂數分配結果 \n 2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用  shape edit modes  轉為  clean model , 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes). \n 3. meARM Robot  動態模擬場景 的建構, 可參考  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 , 也可參考  Uarm Robot model  與相關 影片 . \n 4. CoppeliaSim design dynamic simulations  說明頁面 . \n 5.  網際 Lua  程式執行. \n 6.  meArm.slvs ,  meArm_in_solvespace.slvs \n 7. UI 介面程式參考: \n function closeEventHandler(h)\n    sim.addLog(sim.verbosity_scriptinfos,\'Window \'..h..\' is closing...\')\n    simUI.hide(h)\nend\n\nfunction joint1_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta1 set to \'..newVal)\n    sim.setJointTargetPosition(joint1, newVal*deg)\nend\n\nfunction joint2_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta2 set to \'..newVal)\n    sim.setJointTargetPosition(joint2, newVal*deg)\nend\n\nfunction joint3_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta3 set to \'..newVal)\n    sim.setJointTargetPosition(joint3, newVal*deg)\nend\n\nfunction joint16_rotate(ui,id,newVal)\n    simUI.setLabelText(ui,3000,\'theta16 set to \'..newVal)\n    sim.setJointTargetPosition(joint16, newVal*deg)\n    sim.setJointTargetPosition(joint20, -newVal*deg)\nend\n\nfunction sysCall_init()\n    -- do some initialization here\n    joint1 = sim.getObjectHandle(\'motor1\')\n    joint2 = sim.getObjectHandle(\'motor2\')\n    joint3 = sim.getObjectHandle(\'motor3\')\n    joint16 = sim.getObjectHandle(\'motor16\')\n    joint20 = sim.getObjectHandle(\'motor20\')\n    i = 0\n    deg = math.pi/180\n    print(i)\n    xml = [[\n<ui closeable="true" on-close="closeEventHandler" resizable="true">\n    <label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" />\n    <tabs>\n        <tab title="Numeric">a\n            <label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" />\n            <label text="" id="3000" wordwrap="true" />\n            <label text="theta1" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="360" on-change="joint1_rotate" />\n            <label text="theta2" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="65" on-change="joint2_rotate" />\n            <label text="theta3" /> <hslider tick-position="above" tick-interval="1" \n            minimum="-90" maximum="185" on-change="joint3_rotate" />\n            <label text="theta16" /> <hslider tick-position="above" tick-interval="1" \n            minimum="0" maximum="15" on-change="joint16_rotate" />\n        </tab>\n    </tabs>\n</ui>\n]]\n    ui=simUI.create(xml)\n    \nend \n \n (From:  2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf ) \n \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'W13', 'text': 'W13 週評分查驗: \n 請在個人的 cad2021_hw 網站中的 HW1 最下方新增一個 H2 的頁面, 標題為 W13 (W 為大寫), 主要查驗個人 meArm 作業所完成的項目: \n 請建立一個 Wink 檔案說明截至目前所完成的兩套 CAD 零組件繪圖進度 (30%). \n 請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂第一軸, 加入 slider , 可以在執行時, 利用滑鼠拖動旋轉 360 度 (30%). \n 請建立一個 Wink 檔案, 將 1. 已經完成的 meArm 機械手臂其中的 1 ~ 3 軸 (夾爪除外), 加入 UI 介面 slider, 可以在執行時, 利用滑鼠拖動在各軸的極限位置旋轉 (40%). \n 完成上述各項後, 請將結果登錄至 作業區 \n', 'tags': '', 'url': 'W13.html'}, {'title': '目前零組件進度', 'text': '1.目前零組件進度: \n \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '目前零組件進度.html'}, {'title': '第一軸模擬', 'text': '2.第一軸模擬: \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '第一軸模擬.html'}, {'title': '二、三軸模擬', 'text': '3. 二、三軸模擬 : \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '二、三軸模擬.html'}, {'title': 'CAD(NX12.0)繪圖', 'text': 'CAD指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n \n NX12.0 歷史(擷取自維基百科) \n 1969年: United Computing發布了UNIAPT，這是世界上第一個CAM產品。 \n 1973年: United Computing從MGS公司購買了ADAM（Automated Drafting and Machining) 軟體的代碼。這些代碼構成了UNI-GRAPHICS（優集）的基礎。 \n 1976年: 麥道公司收購了優集公司。 \n 1991年: 麥道將優集出售給通用汽車旗下的EDS。 \n 2007年: 西門子公司收購了優集。 \n \n CAD 緣起: \n 早期的工程圖紙全都由工程師進行手動繪製，直到二十世紀60年代，出現了CAD軟體，但是當時的電腦相當昂貴，所以在當時的普及率相當低，70年代電腦的價格開始降低，普及率慢慢提升。 \n \n NX12.0 緣起: \n NX又稱UG，最初版本開發在1990年，基於C語言開發的UG，起初用在大型機台上面，在1991年時轉移到了工作站上，在後面陸續轉售給其他公司，最後由西門子公司接手。 \n \n NX主要功能: \n \n NX工業設計和風格造型: \n 利用NX建模設計師能夠立即建立和修改複雜的產品造型，使用渲染及可視化工具來滿足設計師的審美要求。 \n \n NX產品設計: \n 為了提供設計師擁有設計複雜產品的需求，NX具有高性能的機械設計能力及製圖功能 ，通用的設計工具，用於專業的管路、線路、板金模塊、專用塑料件設計模塊以及其他行業之專業需求。 \n \n NX仿真、確認和優化: \n 製造商可通過數字化的方式來確認開發中的產品狀態，可以減少製作樣品所花的時間、金錢、人力。 \n \n NC加工: \n 擁有豐富刀具庫、可定義之多軸模擬CNC加工，進行產品的模擬切削，可即時觀看切削時的狀態。 \n \n NX模具設計: \n 當今較流行的模具設計軟體，主因是因為功能強大，設計流程也較多。 \n \n', 'tags': '', 'url': 'CAD(NX12.0)繪圖.html'}, {'title': 'CAD(NX12.0) 安裝配置', 'text': 'CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n 安裝教學請點擊下面超連結 \n CAD1 套件下載安裝與配置(請點我) \n', 'tags': '', 'url': 'CAD(NX12.0) 安裝配置.html'}, {'title': 'CAD(NX12.0) 操作流程', 'text': 'CAD1 零組件繪圖操作流程影片 \n CAD1 零組件繪圖教學影片 (Wink) \n \n', 'tags': '', 'url': 'CAD(NX12.0) 操作流程.html'}, {'title': 'CAD(Inventor)繪圖', 'text': 'CAD指各學員所分配到的第二套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n CAD 緣起: \n 早期的工程圖紙全都由工程師進行手動繪製，直到二十世紀60年代，出現了CAD軟體，但是當時的電腦相當昂貴，所以在當時的普及率相當低，70年代電腦的價格開始降低，普及率慢慢提升。 \n \n Inventor 緣起: \n Inventor是美國AutoDesk公司所發行的三維設計軟體，目前版本為AIP2020，並且有推出iPhone版本。 \n \n Inventor 主要功能: \n 運動模擬: \n 讓用戶了解該部件如何運動。 \n \n 布管設計: \n 可以協助用戶節約所需材料以及所需時間。 \n \n 線束設計: \n 使用電路設計軟體所導出的線路表，可以接續進行電纜和線路設計。 \n \n CAD集成: \n 集成了二維和三維設計功能，不須數據轉換器 \n \n 零件設計: \n 使設計師更輕鬆地使用設計數據，更靈活的表現設計理念，可以顯著提高設計效率。 \n \n 板金設計: \n 軟體提供了加工資訊、精確的板金折彎模型以及展開模型編輯環境 \n \n 裝配設計: \n 提供精確驗證的干涉和各種屬性，以便創建高品質的產品，管理工具可有效控制、管理大型裝配中的數據。 \n \n 工程圖: \n 提供了從數位樣機中生成工程設計和製造文檔的工具，這些工具可以減少錯誤以縮短設計交付時間。 \n \n', 'tags': '', 'url': 'CAD(Inventor)繪圖.html'}, {'title': 'CAD(Inventor) 安裝配置', 'text': 'CAD2 指各學員所分配到的第二套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace. \n 安裝教學請點擊下面超連結 \n CAD2 套件下載安裝與配置(請點我) \n', 'tags': '', 'url': 'CAD(Inventor) 安裝配置.html'}, {'title': 'CAD(Inventor) 操作流程', 'text': 'CAD2 零組件繪圖操作流程影片 \n CAD2 零組件繪圖教學影片 (Wink) \n \n', 'tags': '', 'url': 'CAD(Inventor) 操作流程.html'}, {'title': '運動場景', 'text': 'CAD(NX12.0): \n CAD1 零件轉出後轉入 CoppeliaSim 操作影片 \n CAD1 零件轉入 CoppeliaSim 教學影片 (Wink) \n CAD(Inventor): \n CAD2 零件轉出後轉入 CoppeliaSim 操作影片 \n CAD2 零件轉入 CoppeliaSim 教學影片 (Wink) \n \n 貼心提醒: \n 使用使用coppeliasim時，要將整個主程式資料夾放在電腦硬碟中，放在隨身碟裡面會無法導入stl檔案 \n \n 正確的放置位置: \n \n \n 錯誤的放置位置: \n \n \n', 'tags': '', 'url': '運動場景.html'}, {'title': 'W11', 'text': '', 'tags': '', 'url': 'W11.html'}, {'title': '連桿機構與運動場景(INV)', 'text': '檔案下載: \n 連桿機構與運動場景(INV) \n \n 影片: \n 連桿機構繪圖過程(INV) \n Wink: \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '連桿機構與運動場景(INV).html'}, {'title': '連桿機構與運動場景(NX)', 'text': '檔案下載: \n 連桿機構與運動場景(NX) \n \n 影片: \n 連桿機構繪圖過程(NX) \n Wink: \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '連桿機構與運動場景(NX).html'}, {'title': '連桿機構與運動場景(模擬)', 'text': '影片: \n 連桿機構運動場景 \n Wink: \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '連桿機構與運動場景(模擬).html'}, {'title': 'HW1-1', 'text': 'HW1-1 佔學期成績 15% \n HW1-1 必須在 2021.12.01 22:00 之前完成. \n HW1-1 具體項目成果回報區 將於 2021.11.18 開啟, 於  2021.12.01 22:00 關閉. \n 作業 1-1: Mirobot 機械手臂場景組合 \n 說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至  Task1-1  中六個自由度的 Mirobot 機械手臂. \n mirobot_part1_to_part5.7z  為取自 \xa0 https://github.com/wlkata/Mirobot-STL  的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過  UI 介面 中的 slider 控制各軸作動旋轉的運動模型. \n 請根據  Task1-1  中的說明, 完成各項指定任務. \n \n \n 紀錄:11/29 \n 影片一(已了解如何使物件旋轉與目前所遇到的問題) \n \n \n 如圖所示，目前不曉得要如何對兩個零件進行約束 \n \xa0 \n 12/01 \n 影片二(已了解如何對連桿機構進行約束) \n \n \n 如圖所示，目前已經可以對連桿進行約束，其問題在下一部影片會提到 \n \xa0 \n 影片三(腳本設定與約束問題) \n \n \n 如圖所示，目前遇到約束不夠好的問題，導致機構發生突然運動的時候會造成機構散架 \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 為選項作業. \n HW3 具體項目成果回報區 將於 2021.12.09 開啟, 於  2022.01.05 22:00 關閉 \n https://mde.tw/cad2021/content/Task3.html \xa0 \n https://mde.tw/cad2021/content/Task4.html \n https://mde.tw/cad2021/content/Task5.html \n https://mde.tw/cad2021/content/Task6.html \n https://mde.tw/cad2021/content/Task7.html \n 請從上列 Tasks 中自行選擇項目內容完成 HW3. \n', 'tags': '', 'url': 'HW3.html'}, {'title': '期末考卷', 'text': 'w17考試內容 \n 組立檔 \n Coppeliasim模擬檔 \n (模擬檔未放ui，如需使用ui，請將資料夾內的ui文件檔內容寫進至腳本) \n 繪圖過程: \n (因為爪子與組立是不同天做的，忘記錄影，故沒有組立過程影片) \n \n 轉入過程: \n \n', 'tags': '', 'url': '期末考卷.html'}, {'title': 'Final Project', 'text': '我這次抽到的CAD是Inventor和NX 12.0 \n NX12.0之前有用過，但是Inventor是我第一次使用，所以我還有很多地方不熟悉，明年六月要考立體丙級要加緊練習。 \n \n NX 12.0繪圖過程如下: \n \n \xa0 \n Inventor繪圖過程如下: \n \n \n \n 這是我第一次碰到Coppeliasim這個軟體，目前對於整個結構件要轉入進去目前還不會，只能先用參考件先做模擬，目前夾爪模擬部分也做出來了，下次更新再放上來。 \n \n 第一軸模擬: \n \n \n \n 二、三軸模擬: \n \n \n \n \n 接下來連桿模擬，因為還沒了解怎麼將結構轉入，所以這是動手將各零件位置拉到定位後再進行模擬。 \n 繪圖過程(INV): \n \n \xa0 \n \n 繪圖過程(NX12.0): \n \n \n \n \n 模擬過程: \n \n \n \n \n W16周考試內容 \n 繪圖過程: \n \n 組立過程 \n \n 轉入過程and組立 \n \n 模擬過程 \n \n 轉入過程and組立(延伸題) \n \n 模擬過程(延伸題) \n \n 本次考試心得: \n 這次的題目，最大的問題就是我不知道如何轉入，經過摸索之後，我已經習的這塊最後的拼圖了，接著連結前面所學的，繪圖、組立、轉入、模擬串聯起來，謝謝老師，我學會這項軟體的基礎了 \n \n \n w17考試內容 \n 組立檔 \n Coppeliasim模擬檔 \n (模擬檔未放ui，如需使用ui，請將資料夾內的ui文件檔內容寫進至腳本) \n 繪圖過程: \n (因為爪子與組立是不同天做的，忘記錄影，故沒有組立過程影片) \n \n 轉入過程: \n \n \n \n 總結: \n 這學期碰到了許多新東西，希望對下學期的協同設計有幫助。', 'tags': '', 'url': 'Final Project.html'}, {'title': 'Run', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n', 'tags': '', 'url': 'Run.html'}]};