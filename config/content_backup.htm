<h1>About</h1>
<p>本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁.</p>
<p> </p>
<p><em><strong>目前版本號:</strong></em></p>
<p><span style="color: #ff0000;">HomePage:1.1.6</span></p>
<p><span style="color: #ff0000;">HomeWork:1.3.2</span></p>
<hr/>
<p>這裡是40923218的網站</p>
<p><a href="https://github.com/mdecourse/cad2021_hw">網站原始碼倉儲</a></p>
<p><a href="https://mde.tw/cad2021_hw">網站模板連結</a></p>
<p><a href="https://github.com/40923218/cad2021_hw">我的倉儲</a></p>
<p><a href="https://40923218.github.io/cad2021_hw/content/%E6%9B%B4%E6%96%B0%E5%85%A7%E5%AE%B9.html">歷史更新內容</a></p>
<p>其他與作者或作業相關資料說明或介紹</p>
<hr/>
<p>版本號由來:</p>
<p>Q:為什麼我會使用這個版本號?</p>
<p>A:以這樣子的版本號代替我這次更新了甚麼東西，這可以讓我的版面更簡潔，我也有把更新內容打在網頁裡面，我認為觀看者可以透過我整理的版本更新裡面找出我在那些版本更新了甚麼。之後在推上Github時會多打上本次重點更新，其餘更新會照往常一樣整理在更新內容內，這樣觀看者可以在Github上面看到我主要更新內容外，在網頁上也能看到這次總共更新了哪些東西。</p><h2>更新內容</h2>
<p>HomePage:<span style="background-color: #ff0000; color: #ffffff;">首頁更新</span></p>
<p>HomeWork:<span style="background-color: #ff0000; color: #ffffff;">作業相關更新</span></p>
<br/><br/><br/><span style="color: #ffffff; background-color: #ff6600;">九月份更新</span>
<p><span style="color: #000000;">9/25:HomePage1.0</span></p>
<p><span style="color: #000000;">(更新網頁Title、版本號說明、版本更新內容)</span></p>
<p><span style="color: #000000;"></span> </p>
<p><span style="color: #ffffff; background-color: #ff6600;">十月份更新</span></p>
<p><span style="color: #000000;">10/7:HomePage1.1</span></p>
<p><span style="color: #000000;">(編排About網址連結、新增Task頁面、HwPage、學員帳號)</span></p>
<p> </p>
<p><span style="color: #000000;">        HomePage1.1.2</span></p>
<p><span style="color: #000000;"><span>(更新Task&gt;HwPage學員網站連結)</span></span></p>
<p> </p>
<p><span style="color: #000000;"><span>10/18:HomPage1.1.3</span></span></p>
<p><span style="color: #000000;"><span>(更新Task&gt;HwPage學員Github帳號連結、Python程式解法、解說、心得)</span></span></p>
<p><span style="color: #000000;"><span> </span></span></p>
<p><span style="color: #000000;"><span>10/21:HomePage1.1.4</span></span></p>
<p><span style="color: #000000;"><span>(更新Run，程式輸出區)</span></span></p>
<p><span style="color: #000000;"><span> </span></span></p>
<p><span style="color: #000000;"><span>10/23:HomeWork1.0</span></span></p>
<p><span style="color: #000000;"><span>(更新HW1&gt;CAD1、CAD2緣起與介紹)</span></span></p>
<p><span style="color: #000000;"><span> </span></span></p>
<p><span style="color: #000000;"><span>10/30:HomeWork1.1</span></span></p>
<p><span style="color: #000000;"><span>(更新HW1&gt;CAD1、CAD2安裝教學影片)</span></span></p>
<p> </p>
<p>          HomePage1.1.4_ReleaseNotes</p>
<p>(更新:About&gt;新增現行版本號由來)</p>
<p>(新增:About&gt;更新內容超連結、目前版本號)</p>
<p> </p>
<p><span style="background-color: #ff6600; color: #ffffff;">十一月份更新</span></p>
<p><span style="color: #000000;">11/7:HomeWork1.2</span></p>
<p><span style="color: #000000;">(更新:HW1&gt;CAD2(Inventor)操作流程、CAD2(Inventor)零件轉入coppeliasim)</span></p>
<p><span style="color: #000000;"> </span></p>
<p><span style="color: #000000;">        HomePage1.1.5</span></p>
<p><span style="color: #000000;">(修改:HW1分支名稱)</span></p>
<p><span style="color: #000000;"> </span></p>
<p><span style="color: #000000;">        HomeWork1.3</span></p>
<p><span style="color: #000000;">(更新<span>:HW1&gt;CAD1(NX12.0)操作流程、CAD1(NX12.0)零件轉入coppeliasim</span>)</span></p>
<p><span style="color: #000000;"> </span></p>
<p>11/25:HomePage1.1.6</p>
<p>(修改:HW1&gt;CAD1、CAD2下載配置連結修改)</p>
<p> </p>
<p>11/29:HomeWork1.3.1</p>
<p>(更新:HW1-1&gt;影片連結、目前所遇到之問題)</p>
<p><span style="color: #000000;"> </span></p>
<p><span style="color: #ffffff; background-color: #ff6600;">十二月份更新</span></p>
<p>12/1:HomeWork1.3.2</p>
<p>(<span>更新:HW1-1&gt;影片連結、連桿約束</span>)</p>
<p> </p><h1>Task</h1>
<h2>HwPage</h2>
<p><span style="color: #000000;"><strong>cad2b          github 網站   github倉儲</strong><br/><strong>40723126   <a href="https://40723126.github.io/cad2021_hw/content/index.html">40723126</a>  <a href="https://github.com/40723126/cad2021_hw">40723126</a></strong></span><br/><strong>40723135   <a href="https://40723135.github.io/cad2021_hw/content/index.html">40723135</a>  <a href="https://github.com/40723135/cad2021_hw">40723135</a></strong><br/><strong>40723217   <a href="https://40723217.github.io/cad2021_hw/content/index.html">40723217</a>  <a href="https://github.com/40723217/cad2021_hw">40723217</a></strong><br/><strong>40732331   <a href="https://40732331.github.io/cad2021_hw/content/index.html">40732331</a>  <a href="https://github.com/40732331/cad2021_hw">40732331</a></strong><br/><strong>40823114   <a href="https://40823114.github.io/cad2021_hw/content/index.html">40823114</a>  <a href="https://github.com/40823114/cad2021_hw">40823114</a></strong><br/><strong>40823115   <a href="https://40823115.github.io/cad2021_hw/content/index.html">40823115</a>  <a href="https://github.com/40823115/cad2021_hw">40823115</a></strong><br/><strong>40823117   <a href="https://pyc40823117.github.io/cad2021_hw/content/index.html">40823117</a>  <a href="https://github.com/pyc40823117/cad2021_hw">40823117</a></strong><br/><strong>40823119   <a href="https://40823119.github.io/cad2021_hw/content/index.html">40823119</a>  <a href="https://github.com/40823119/cad2021_hw">40823119</a></strong><br/><strong>40823122   <a href="https://40823122.github.io/cad2021_hw/content/index.html">40823122</a>  <a href="https://github.com/40823122/cad2021_hw">40823122</a></strong><br/><strong>40823127   <a href="https://40823127.github.io/cad2021_hw/content/index.html">40823127</a>  <a href="https://github.com/40823127/cad2021_hw">40823127</a></strong><br/><strong>40823146   <a href="https://40823146.github.io/cad2021_hw/content/index.html">40823146</a>  <a href="https://github.com/40823146/cad2021_hw">40823146</a></strong><br><strong>40823148   <a href="https://40823148.github.io/cad2021_hw/content/index.html">40823148</a>  <a href="https://github.com/40823148/cad2021_hw">40823148</a></strong><br/><strong>40823215   <a href="https://40823215.github.io/cad2021_hw/content/index.html">40823215</a>  <a href="https://github.com/40823215/cad2021_hw">40823215</a></strong><br/><strong>40871106   <a href="https://40871106.github.io/cad2021_hw/content/index.html">40871106</a>  <a href="https://github.com/40871106/cad2021_hw">40871106</a></strong><br/><strong>40923201   <a href="https://40923201.github.io/cad2021_hw/content/index.html">40923201</a>  <a href="https://github.com/40923201/cad2021_hw">40923201</a></strong><br/><strong>40923203   <a href="https://youshin40923203.github.io/cad2021_hw/content/index.html">40923203</a>  <a href="https://github.com/youshin40923203/cad2021_hw">40923203</a></strong><br/><strong>40923204   <a href="https://40923204.github.io/cad2021_hw/content/index.html">40923204</a>  <a href="https://github.com/40923204/cad2021_hw">40923204</a></strong><br/><strong>40923205   <a href="https://40923205.github.io/cad2021_hw/content/index.html">40923205</a>  <a href="https://github.com/40923205/cad2021_hw">40923205</a></strong><br/><strong>40923206   <a href="https://40923206-1.github.io/cad2021_hw/content/index.html">40923206</a>  <a href="https://github.com/40923206-1/cad2021_hw">40923206</a></strong><br/><strong>40923207   <a href="https://40923207.github.io/cad2021_hw/content/index.html">40923207</a>  <a href="https://github.com/40923207/cad2021_hw">40923207</a></strong><br/><strong>40923208   <a href="https://nfu40923208.github.io/cad2021_hw/content/index.html">40923208</a>  <a href="https://github.com/nfu40923208/cad2021_hw">40923208</a></strong><br/><strong>40923209   <a href="https://nfu40923209.github.io/cad2021_hw/content/index.html">40923209</a>  <a href="https://github.com/nfu40923209/cad2021_hw">40923209</a></strong><br/><strong>40923210   <a href="https://40923210.github.io/cad2021_hw/content/index.html">40923210</a>  <a href="https://github.com/40923210/cad2021_hw">40923210</a></strong><br/><strong>40923211   <a href="https://a40923211.github.io/cad2021_hw/content/index.html">40923211</a>  <a href="https://github.com/a40923211/cad2021_hw">40923211</a></strong><br/><strong>40923212   <a href="https://40923212.github.io/cad2021_hw/content/index.html">40923212</a>  <a href="https://github.com/40923212/cad2021_hw">40923212</a></strong><br/><strong>40923213   <a href="https://40923213.github.io/cad2021_hw/content/index.html">40923213</a>  <a href="https://github.com/40923213/cad2021_hw">40923213</a></strong><br/><strong>40923214   <a href="https://40923214.github.io/cad2021_hw/content/index.html">40923214</a>  <a href="https://github.com/40923214/cad2021_hw">40923214</a></strong><br/><strong>40923216   <a href="https://40923216.github.io/cad2021_hw/content/index.html">40923216</a>  <a href="https://github.com/40923216/cad2021_hw">40923216</a></strong><br/><strong>40923217   <a href="https://40923217.github.io/cad2021_hw/content/index.html">40923217</a>  <a href="https://github.com/40923217/cad2021_hw">40923217</a></strong><br/><strong>40923218   <a href="https://40923218.github.io/cad2021_hw/content/index.html">40923218</a>  <a href="https://github.com/40923218/cad2021_hw">40923218</a></strong><br/><strong>40923219   <a href="https://nfu40923219.github.io/cad2021_hw/content/index.html">40923219</a>  <a href="https://github.com/nfu40923219/cad2021_hw">40923219</a></strong><br/><strong>40923220   <a href="https://40923220.github.io/cad2021_hw/content/index.html">40923220</a>  <a href="https://github.com/40923220/cad2021_hw">40923220</a></strong><br/><strong>40923221   <a href="https://40923221.github.io/cad2021_hw/content/index.html">40923221</a>  <a href="https://github.com/40923221/cad2021_hw">40923221</a></strong><br/><strong>40923223   <a href="https://40923223.github.io/cad2021_hw/content/index.html">40923223</a>  <a href="https://github.com/40923223/cad2021_hw">40923223</a></strong><br/><strong>40923224   <a href="https://s40923224.github.io/cad2021_hw/content/index.html">40923224</a>  <a href="https://github.com/s40923224/cad2021_hw">40923224</a></strong><br/><strong>40923225   <a href="https://40923225.github.io/cad2021_hw/content/index.html">40923225</a>  <a href="https://github.com/40923225/cad2021_hw">40923225</a></strong><br/><strong>40923226   <a href="https://40923226.github.io/cad2021_hw/content/index.html">40923226</a>  <a href="https://github.com/40923226/cad2021_hw">40923226</a></strong><br/><strong>40923227   <a href="https://40923227.github.io/cad2021_hw/content/index.html">40923227</a>  <a href="https://github.com/40923227/cad2021_hw">40923227</a></strong><br/><strong>40923228   <a href="https://40923228.github.io/cad2021_hw/content/index.html">40923228</a>  <a href="https://github.com/40923228/cad2021_hw">40923228</a></strong><br/><strong>40923229   <a href="https://40923229.github.io/cad2021_hw/content/index.html">40923229</a>  <a href="https://github.com/40923229/cad2021_hw">40923229</a></strong><br/><strong>40923230   <a href="https://40923230.github.io/cad2021_hw/content/index.html">40923230</a>  <a href="https://github.com/40923230/cad2021_hw">40923230</a></strong><br/><strong>40923231   <a href="https://40923231.github.io/cad2021_hw/content/index.html">40923231</a>  <a href="https://github.com/40923231/cad2021_hw">40923231</a></strong><br/><strong>40923232   <a href="https://40923232.github.io/cad2021_hw/content/index.html">40923232</a>  <a href="https://github.com/40923232/cad2021_hw">40923232</a></strong><br/><strong>40923233   <a href="https://40923233.github.io/cad2021_hw/content/index.html">40923233</a>  <a href="https://github.com/40923233/cad2021_hw">40923233</a></strong><br/><strong>40923234   <a href="https://40923234.github.io/cad2021_hw/content/index.html">40923234</a>  <a href="https://github.com/40923234/cad2021_hw">40923234</a></strong><br/><strong>40923235   <a href="https://40923235.github.io/cad2021_hw/content/index.html">40923235</a>  <a href="https://github.com/40923235/cad2021_hw">40923235</a></strong><br/><strong>40923236   <a href="https://40923236.github.io/cad2021_hw/content/index.html">40923236</a>  <a href="https://github.com/40923236/cad2021_hw">40923236</a></strong><br/><strong>40923237   <a href="https://40923237.github.io/cad2021_hw/content/index.html">40923237</a>  <a href="https://github.com/40923237/cad2021_hw">40923237</a></strong><br/><strong>40923238   <a href="https://40923238.github.io/cad2021_hw/content/index.html">40923238</a>  <a href="https://github.com/40923238/cad2021_hw">40923238</a></strong><br/><strong>40923239   <a href="https://40923239.github.io/cad2021_hw/content/index.html">40923239</a>  <a href="https://github.com/40923239/cad2021_hw">40923239</a></strong><br/><strong>40923240   <a href="https://40923240.github.io/cad2021_hw/content/index.html">40923240</a>  <a href="https://github.com/40923240/cad2021_hw">40923240</a></strong><br/><strong>40923241   <a href="https://40923241.github.io/cad2021_hw/content/index.html">40923241</a>  <a href="https://github.com/40923241/cad2021_hw">40923241</a></strong><br/><strong>40923242   <a href="https://40923242.github.io/cad2021_hw/content/index.html">40923242</a>  <a href="https://github.com/40923242/cad2021_hw">40923242</a></strong><br/><strong>40923243   <a href="https://40923243.github.io/cad2021_hw/content/index.html">40923243</a>  <a href="https://github.com/40923243/cad2021_hw">40923243</a></strong><br/><strong>40923244   <a href="https://40923244.github.io/cad2021_hw/content/index.html">40923244</a>  <a href="https://github.com/40923244/cad2021_hw">40923244</a></strong><br/><strong>40923245   <a href="https://40923245-1.github.io/cad2021_hw/content/index.html">40923245</a>  <a href="https://github.com/40923245-1/cad2021_hw">40923245</a></strong><br/><strong>40923246   <a href="https://40923246.github.io/cad2021_hw/content/index.html">40923246</a>  <a href="https://github.com/40923246/cad2021_hw">40923246</a></strong><br/><strong>40923247   <a href="https://40923247.github.io/cad2021_hw/content/index.html">40923247</a>  <a href="https://github.com/40923247/cad2021_hw">40923247</a></strong><br/><strong>40923248   <a href="https://40923248.github.io/cad2021_hw/content/index.html">40923248</a>  <a href="https://github.com/40923248/cad2021_hw">40923248</a></strong><br/><strong>40923249   <a href="https://40923249-1.github.io/cad2021_hw/content/index.html">40923249</a>  <a href="https://github.com/40923249-1/cad2021_hw">40923249</a></strong><br/><strong>40923250   <a href="https://40923250.github.io/cad2021_hw/content/index.html">40923250</a>  <a href="https://github.com/40923250/cad2021_hw">40923250</a></strong><br/><strong>40923251   <a href="https://40923251.github.io/cad2021_hw/content/index.html">40923251</a>  <a href="https://github.com/40923251/cad2021_hw">40923251</a></strong><br/><strong>40923252   <a href="https://40923252.github.io/cad2021_hw/content/index.html">40923252</a>  <a href="https://github.com/40923252/cad2021_hw">40923252</a></strong><br/><strong>40923253   <a href="https://40923253.github.io/cad2021_hw/content/index.html">40923253</a>  <a href="https://github.com/40923253/cad2021_hw">40923253</a></strong><br/><strong>40971220   <a href="https://40971220.github.io/cad2021_hw/content/index.html">40971220</a>  <a href="https://github.com/40971220/cad2021_hw">40971220</a></strong><br/><strong>40971227   <a href="https://40971227.github.io/cad2021_hw/content/index.html">40971227</a>  <a href="https://github.com/40971227/cad2021_hw">40971227</a></strong><br/><strong><br/></strong></br></p>
<h2>解法(含Python)</h2>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#打開學員列表清單，並且轉換成列表
with open("cad2021_2b_w2_list.txt","r",encoding="UTF-8") as page:
	page.readline()
	lines = page.read().splitlines()

Web = []

#將列表內的學號和Github帳號轉導入網頁源碼裡面
for line in lines:
    number, name = line.split("\t")
    link2 = f"https://{name}.github.io/cad2021_hw/content/index.html"
    link = f"https://github.com/{name}/cad2021_hw"
    st = f'&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;{number}   &lt;a href="{link2}"&gt;{number}&lt;/a&gt;  &lt;a href="{link}"&gt;{number}&lt;/a&gt;&lt;/strong&gt;&lt;br/&gt;&lt;strong&gt;&lt;br/&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;'
    Web.append(st)

#輸出網頁源碼
for url in Web:
	print (url)</pre>
<p><span style="color: #ff0000;">以上為程式碼，備註以上自行觀看</span></p>
<p>我先將網頁源碼從content.htm裡面提出，我先在網頁裡面做出範本(下圖)<img alt="" height="275" src="/images/第一步.png" width="562"/></p>
<p></p>
<p>content.htm在倉儲資料夾裡面的config裡面，將範本網頁源碼提出來後，放到程式碼裡面，再經由程式碼輸出(下圖)</p>
<p><img alt="" height="554" src="/images/第三步.png" width="335"/></p>
<p></p>
<p>最後放到content.htm裡面後，要注意不要放錯行(下圖)</p>
<p><img alt="" height="321" src="/images/第四步.png" width="315"/></p>
<p></p>
<p>最後刷新動態頁面(下圖)</p>
<p><img alt="" height="341" src="/images/第二步.png" width="695"/></p>
<p>痾...好吧，我不清楚為甚麼會有空格產生，這個以後有空我來研究看看</p>
<h2>心得</h2>
<p>我必須要先說，這個程式碼我是請教我會Python的朋友，讓他一步一步帶我的情況下所做出來的，後面再做些微修改(原本只有倉儲連結，我再多加網頁連結)，這是個不錯的學習，雖然目前沒有弄得很懂，但我希望能一步一步來，至少要打好基礎</p>
<p><a href="https://github.com/Euxcbsks">友人Github連結</a></p>
<h1>HW1</h1>
<p>HW1 佔學期成績 25%</p>
<p><span style="background-color: #ffff99;">HW1 必須在 2021.11.10 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/5">HW1 具體項目成果回報區</a>將於 2021.09.23 開啟, 於 <span style="background-color: #ff99cc;">2021.11.10 22:00 關閉.</span></p>
<h4>作業一: meArm Robot 零件繪圖與機電運動模擬場景製作</h4>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step1</span>: 下載 <a href="https://drive.google.com/file/d/18ukdNlFB9yHY-FZSY-bTnzrPrNv0FE4D/view?usp=sharing">meARM.7z</a> 這個包含尚未完成組立的 meArm Robot 場景與雷射切割零件組立手冊.</p>
<p style="padding-left: 60px;"><a href="/downloads/meArm_75-0040_v1.pdf">meArm_75-0040_v1.pdf</a> 則是另外一本組立參考手冊.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step2</span>: 從課程網頁中的 <a href="https://mde.tw/cad2021/content/Compile%20CoppeliaSim.html">Compile CoppeliaSim 頁面</a>, 下載 <a href="https://drive.google.com/file/d/1hV8hHjjnLvUp-AEjd2iCfBYk067WSjcy/view?usp=sharing">coppeliaSim 4.1.0 官方版與 MSYS2 編譯版.7z</a> (檔案大小 412 MB, 解開壓縮後 1GB) 可攜套件.</p>
<p style="padding-left: 30px;"><span style="background-color: #ccffcc;">Step3</span>: 在 HW1 中, 要求每一位學員透過程式亂數分配 (兩班實際亂數分配結果以上課時點擊下列按鈕所得結果為準) 所使用的兩套參數式 CAD 套件, 從軟體發展緣起開始進行介紹,  經過教育版軟體套件檔案的取得, 下載安裝以及配置使用. 根據 Step1 中的零件尺寸, 逐一完成 meArm Robot 各零件繪製與組立. 並將零件<a href="https://www.coppeliarobotics.com/helpFiles/en/importExport.htm">匯入</a> CoppeliaSim 進行組裝配置後, 以 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制 meArm Robot 各軸的旋轉作動.</p>
<p style="padding-left: 30px;">2b CAD 套件分配結果: <a href="https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt">https://mde.tw/cad2021/downloads/online/2b_hw1_cad.txt</a></p>
<h4>附件:</h4>
<p style="padding-left: 30px;">1. CAD 套件分配表:</p>
<p style="padding-left: 60px;">sw: Solidworks, inv: Inventor, nx: NX12, ons: Onshape, slvs: Solvespace</p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination.py">2a 套件亂數分配結果</a></p>
<p style="padding-left: 60px;"><a href="https://mde.tw/cad2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/6d0b8df27021529f910cbd0fde2222b6/raw/d5dbb42166e70d9bf4815e0f669957e40106f8fc/distrubute_cad_combination_b.py">2b 套件亂數分配結果</a></p>
<p style="padding-left: 30px;">2. 在兩套 CAD 完成零件繪圖並轉入 CoppeliaSim 後, 為了建立 Dynamic Model 必須利用 <a href="https://www.coppeliarobotics.com/helpFiles/en/shapeEditModes.htm">shape edit modes</a> 轉為 <a href="https://www.coppeliarobotics.com/helpFiles/en/buildingAModelTutorial.htm">clean model</a>, 並與實際轉入的 STL 格式零件外形結合應用後建立模擬場景 (scenes).</p>
<p style="padding-left: 30px;">3. meARM Robot <a href="https://www.youtube.com/watch?v=YdhpMqNa_mE">動態模擬場景</a>的建構, 可參考 <a href="https://www.youtube.com/watch?v=ucO0v5iel-c">0</a>, <a href="https://www.youtube.com/watch?v=jeviAIlh7wY">1</a>, <a href="https://www.youtube.com/watch?v=MrmHoGa3Kg4">2</a>, <a href="https://www.youtube.com/watch?v=43-xyipH9Ss">3</a>, <a href="https://www.youtube.com/watch?v=i9e4GXov8rk">4</a>, <a href="https://www.youtube.com/watch?v=7f1jzC6Uptg">5</a>, <a href="https://www.youtube.com/watch?v=xadyMQJxjnw">6</a>, <a href="https://www.youtube.com/watch?v=SQhKlnNnzuQ">7</a>, 也可參考 <a href="https://github.com/mdecourse/models/blob/master/robots/non-mobile/uarm.ttm">Uarm Robot model</a> 與相關<a href="https://www.youtube.com/watch?v=OqPVK__z9Ek">影片</a>.</p>
<p style="padding-left: 30px;">4. CoppeliaSim design dynamic simulations <a href="https://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">說明頁面</a>.</p>
<p style="padding-left: 30px;">5. <a href="https://mde.tw/cad2021/downloads/lua/index.html">網際 Lua</a> 程式執行.</p>
<p style="padding-left: 30px;">6. <a href="/downloads/meArm.slvs">meArm.slvs</a>, <a href="/downloads/meArm_in_solvespace.slvs">meArm_in_solvespace.slvs</a></p>
<p style="padding-left: 30px;">7. UI 介面程式參考:</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function closeEventHandler(h)
    sim.addLog(sim.verbosity_scriptinfos,'Window '..h..' is closing...')
    simUI.hide(h)
end

function joint1_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta1 set to '..newVal)
    sim.setJointTargetPosition(joint1, newVal*deg)
end

function joint2_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta2 set to '..newVal)
    sim.setJointTargetPosition(joint2, newVal*deg)
end

function joint3_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta3 set to '..newVal)
    sim.setJointTargetPosition(joint3, newVal*deg)
end

function joint16_rotate(ui,id,newVal)
    simUI.setLabelText(ui,3000,'theta16 set to '..newVal)
    sim.setJointTargetPosition(joint16, newVal*deg)
    sim.setJointTargetPosition(joint20, -newVal*deg)
end

function sysCall_init()
    -- do some initialization here
    joint1 = sim.getObjectHandle('motor1')
    joint2 = sim.getObjectHandle('motor2')
    joint3 = sim.getObjectHandle('motor3')
    joint16 = sim.getObjectHandle('motor16')
    joint20 = sim.getObjectHandle('motor20')
    i = 0
    deg = math.pi/180
    print(i)
    xml = [[
&lt;ui closeable="true" on-close="closeEventHandler" resizable="true"&gt;
    &lt;label text="This is a demo of the CustomUI plugin. Browse through the tabs below to explore all the widgets that can be created with the plugin." wordwrap="true" /&gt;
    &lt;tabs&gt;
        &lt;tab title="Numeric"&gt;a
            &lt;label text="Sliders can be oriented horizontally or vertically, and have optional properties that can be set (in the XML) such as minimum and maximum value." wordwrap="true" /&gt;
            &lt;label text="" id="3000" wordwrap="true" /&gt;
            &lt;label text="theta1" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="360" on-change="joint1_rotate" /&gt;
            &lt;label text="theta2" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="65" on-change="joint2_rotate" /&gt;
            &lt;label text="theta3" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="-90" maximum="185" on-change="joint3_rotate" /&gt;
            &lt;label text="theta16" /&gt; &lt;hslider tick-position="above" tick-interval="1" 
            minimum="0" maximum="15" on-change="joint16_rotate" /&gt;
        &lt;/tab&gt;
    &lt;/tabs&gt;
&lt;/ui&gt;
]]
    ui=simUI.create(xml)
    
end</pre>
<p><img alt="" class="add_border" height="282" src="/images/meArm_linkage_dimension.png" width="600"/></p>
<p>(From: <a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2pFReCfDZsU" title="YouTube video player" width="560"></iframe></p>
<h2>CAD(NX12.0)繪圖</h2>
<p>CAD指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p></p>
<p><em><strong>NX12.0 歷史(擷取自維基百科)</strong></em></p>
<p><span style="font-weight: 400;"><span style="color: #ff0000;">1969年:</span>United Computing發布了UNIAPT，這是世界上第一個CAM產品。</span></p>
<p><span style="font-weight: 400;"><span style="color: #ff0000;">1973年:</span>United Computing從MGS公司購買了ADAM（Automated Drafting and Machining)</span><span style="font-weight: 400;">軟體的代碼。這些代碼構成了UNI-GRAPHICS（優集）的基礎。</span></p>
<p><span style="font-weight: 400;"><span style="color: #ff0000;">1976年:</span>麥道公司收購了優集公司。</span></p>
<p><span style="font-weight: 400;"><span style="color: #ff0000;">1991年:</span>麥道將優集出售給通用汽車旗下的EDS。</span></p>
<p><span style="font-weight: 400;"><span style="color: #ff0000;">2007年:</span>西門子公司收購了優集。</span></p>
<p></p>
<p><em><strong>CAD 緣起:</strong></em></p>
<p><span style="font-weight: 400;">早期的工程圖紙全都由工程師進行手動繪製，直到二十世紀60年代，出現了CAD軟體，但是當時的電腦相當昂貴，所以在當時的普及率相當低，70年代電腦的價格開始降低，普及率慢慢提升。</span></p>
<p></p>
<p><em><strong>NX12.0 緣起:</strong></em></p>
<p><span style="font-weight: 400;">NX又稱UG，最初版本開發在1990年，基於C語言開發的UG，起初用在大型機台上面，在1991年時轉移到了工作站上，在後面陸續轉售給其他公司，最後由西門子公司接手。</span></p>
<p></p>
<p><em><strong>NX主要功能:</strong></em></p>
<p></p>
<p><span style="color: #ff0000;">NX工業設計和風格造型:</span></p>
<p><span style="font-weight: 400;">利用NX建模設計師能夠立即建立和修改複雜的產品造型，使用渲染及可視化工具來滿足設計師的審美要求。</span></p>
<p></p>
<p><span style="color: #ff0000;">NX產品設計:</span></p>
<p><span style="font-weight: 400;">為了提供設計師擁有設計複雜產品的需求，NX具有高性能的機械設計能力及製圖功能</span><span style="font-weight: 400;">，通用的設計工具，用於專業的管路、線路、板金模塊、專用塑料件設計模塊以及其他行業之專業需求。</span></p>
<p></p>
<p><span style="color: #ff0000;">NX仿真、確認和優化:</span></p>
<p><span style="font-weight: 400;">製造商可通過數字化的方式來確認開發中的產品狀態，可以減少製作樣品所花的時間、金錢、人力。</span></p>
<p></p>
<p><span style="color: #ff0000;">NC加工:</span></p>
<p><span style="font-weight: 400;">擁有豐富刀具庫、可定義之多軸模擬CNC加工，進行產品的模擬切削，可即時觀看切削時的狀態。</span></p>
<p></p>
<p><span style="color: #ff0000;">NX模具設計:</span></p>
<p><span style="font-weight: 400;">當今較流行的模具設計軟體，主因是因為功能強大，設計流程也較多。</span></p>
<p></p>
<h3>CAD(NX12.0) 安裝配置</h3>
<p>CAD1 指各學員所分配到的第一套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p>安裝教學請點擊下面超連結</p>
<p><a href="https://youtu.be/SfS64Edsoq0">CAD1 套件下載安裝與配置(請點我)</a></p><h3>CAD(NX12.0) 操作流程</h3>
<p><a href="https://youtu.be/umxNlEpC-_g">CAD1 零組件繪圖操作流程影片</a></p>
<p>CAD1 零組件繪圖教學影片 (Wink)</p>
<p></p><h2>CAD(Inventor)繪圖</h2>
<p>CAD指各學員所分配到的第二套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p><em><strong>CAD 緣起:</strong></em></p>
<p><span style="font-weight: 400;">早期的工程圖紙全都由工程師進行手動繪製，直到二十世紀60年代，出現了CAD軟體，但是當時的電腦相當昂貴，所以在當時的普及率相當低，70年代電腦的價格開始降低，普及率慢慢提升。</span></p>
<p></p>
<p><em><strong>Inventor 緣起:</strong></em></p>
<p><span style="font-weight: 400;">Inventor是美國AutoDesk公司所發行的三維設計軟體，目前版本為AIP2020，並且有推出iPhone版本。</span></p>
<p></p>
<p><em><strong>Inventor 主要功能:</strong></em></p>
<p><span style="color: #ff0000;">運動模擬:</span></p>
<p><span style="font-weight: 400;">讓用戶了解該部件如何運動。</span></p>
<p></p>
<p><span style="color: #ff0000;">布管設計:</span></p>
<p><span style="font-weight: 400;">可以協助用戶節約所需材料以及所需時間。</span></p>
<p></p>
<p><span style="color: #ff0000;">線束設計:</span></p>
<p><span style="font-weight: 400;">使用電路設計軟體所導出的線路表，可以接續進行電纜和線路設計。</span></p>
<p></p>
<p><span style="color: #ff0000;">CAD集成:</span></p>
<p><span style="font-weight: 400;">集成了二維和三維設計功能，不須數據轉換器</span></p>
<p></p>
<p><span style="color: #ff0000;">零件設計:</span></p>
<p><span style="font-weight: 400;">使設計師更輕鬆地使用設計數據，更靈活的表現設計理念，可以顯著提高設計效率。</span></p>
<p></p>
<p><span style="color: #ff0000;">板金設計:</span></p>
<p><span style="font-weight: 400;">軟體提供了加工資訊、精確的板金折彎模型以及展開模型編輯環境</span></p>
<p></p>
<p><span style="color: #ff0000;">裝配設計:</span></p>
<p><span style="font-weight: 400;">提供精確驗證的干涉和各種屬性，以便創建高品質的產品，管理工具可有效控制、管理大型裝配中的數據。</span></p>
<p></p>
<p><span style="color: #ff0000;">工程圖:</span></p>
<p><span style="font-weight: 400;">提供了從數位樣機中生成工程設計和製造文檔的工具，這些工具可以減少錯誤以縮短設計交付時間。</span></p>
<p></p>
<h3>CAD(Inventor) 安裝配置</h3>
<p>CAD2 指各學員所分配到的第二套參數式 CAD 套件, 其中包括 Solidworks, Inventor, NX, Onshape 與 Solvespace.</p>
<p>安裝教學請點擊下面超連結</p>
<p><a href="https://youtu.be/RU5dU4IIW3o">CAD2 套件下載安裝與配置(請點我)</a></p><h3>CAD(Inventor) 操作流程</h3>
<p><a href="https://youtu.be/O90ivuHgvow">CAD2 零組件繪圖操作流程影片</a></p>
<p>CAD2 零組件繪圖教學影片 (Wink)</p>
<p></p><h2>運動場景</h2>
<h4>CAD(NX12.0):</h4>
<p style="padding-left: 30px;"><a href="https://youtu.be/LpVsN9f3Tno">CAD1 零件轉出後轉入 CoppeliaSim 操作影片</a></p>
<p style="padding-left: 30px;">CAD1 零件轉入 CoppeliaSim 教學影片 (Wink)</p>
<h4>CAD(Inventor):</h4>
<p style="padding-left: 30px;"><a href="https://youtu.be/yWDT6QO51yA">CAD2 零件轉出後轉入 CoppeliaSim 操作影片</a></p>
<p style="padding-left: 30px;">CAD2 零件轉入 CoppeliaSim 教學影片 (Wink)</p>
<p style="padding-left: 30px;"></p>
<p>貼心提醒:</p>
<p>使用使用coppeliasim時，要將整個主程式資料夾放在電腦硬碟中，放在隨身碟裡面會無法導入stl檔案</p>
<p></p>
<p><span style="color: #99cc00;">正確的放置位置:</span></p>
<p><img alt="" height="405" src="/images/noname1.png" width="319"/></p>
<p></p>
<p><span style="color: #ff0000;">錯誤的放置位置:</span></p>
<p><img alt="" height="423" src="/images/noname2.png" width="323"/></p>
<p></p>
<p style="padding-left: 30px;"></p><h1>HW1-1</h1>
<p>HW1-1 佔學期成績 15%</p>
<p><span style="background-color: #ffff99;">HW1-1 必須在 2021.12.01 22:00 之前完成.<br/></span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/6">HW1-1 具體項目成果回報區</a>將於 2021.11.18 開啟, 於 <span style="background-color: #ff99cc;">2021.12.01 22:00 關閉.</span></p>
<h4>作業 1-1: Mirobot 機械手臂場景組合</h4>
<p>說明: meArm Robot 有四個自由度, 請根據 HW1 的零組件繪製組立與 CoppeliaSim 運動場景模擬, 延伸至 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中六個自由度的 Mirobot 機械手臂.</p>
<p><a href="https://drive.google.com/file/d/1hnoMQ1Hh_Hgdxh7Aym4q43DzLjOWUanR/view?usp=sharing">mirobot_part1_to_part5.7z</a> 為取自  <a href="https://github.com/wlkata/Mirobot-STL">https://github.com/wlkata/Mirobot-STL</a> 的參考零件. 請利用場景中 Mirobot STL 零件, 組合為可以透過 <a href="https://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">UI 介面</a>中的 slider 控制各軸作動旋轉的運動模型.</p>
<p>請根據 <a href="https://mde.tw/cad2021/content/Task1-1.html">Task1-1</a> 中的說明, 完成各項指定任務.</p>
<p></p>
<hr/>
<p>紀錄:11/29</p>
<p><a href="https://youtu.be/q9Oe6JY4bVo">影片一(已了解如何使物件旋轉與目前所遇到的問題)</a></p>
<p></p>
<p><img alt="" height="300" src="/images/遇到的問題.png" width="384"/></p>
<p>如圖所示，目前不曉得要如何對兩個零件進行約束</p>
<p> </p>
<p>12/01</p>
<p><a href="/">影片二(已了解如何對連桿機構進行約束)</a></p>
<p></p>
<p><img alt="" height="351" src="/images/連桿約束.png" width="352"/></p>
<p>如圖所示，目前已經可以對連桿進行約束，其問題在下一部影片會提到</p><h1>HW2</h1>
<p>HW2 佔學期成績 20%</p>
<p><span style="background-color: #ffff99;">HW2 必須在 2021.12.22 22:00 之前完成.</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/7">HW2 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2021.12.22 22:00 關閉.</span></p>
<p>meArm 逆向運動學與網際參數式 CAD API 結合應用.</p>
<p>請將 <a href="https://github.com/mdecourse/meArm">https://github.com/mdecourse/meArm</a> 中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制.</p>
<p>請利用 <a href="https://mde.tw/cad2021/content/Task%202.html">Task2</a> 中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求.</p>
<h4>參考:</h4>
<p style="padding-left: 30px;"><a href="/downloads/2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf">2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenberg.pdf">Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf</a></p>
<p style="padding-left: 30px;"><a href="/downloads/KINEMATIC ANALYSIS FOR ROBOT ARM.pdf">KINEMATIC ANALYSIS FOR ROBOT ARM.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://codebender.cc/user/MeArm">https://codebender.cc/user/MeArm</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/meArmPi">https://github.com/mdecourse/meArmPi</a></p>
<p style="padding-left: 60px;"><a href="/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf">/downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/me-arm-ik">https://github.com/mdecourse/me-arm-ik</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecourse/mearm_model">https://github.com/mdecourse/mearm_model</a></p>
<p style="padding-left: 30px;"><a href="https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html">https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecourse/InefficientSkittleSorter">https://github.com/mdecourse/InefficientSkittleSorter</a></p>
<p style="padding-left: 30px;"><a href="https://mearm.com">https://mearm.com</a></p>
<h1>HW3</h1>
<p>HW3 為選項作業.</p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/9">HW3 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p><a href="https://mde.tw/cad2021/content/Task3.html">https://mde.tw/cad2021/content/Task3.html</a> </p>
<p><a href="https://mde.tw/cad2021/content/Task4.html">https://mde.tw/cad2021/content/Task4.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task5.html">https://mde.tw/cad2021/content/Task5.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task6.html">https://mde.tw/cad2021/content/Task6.html</a></p>
<p><a href="https://mde.tw/cad2021/content/Task7.html">https://mde.tw/cad2021/content/Task7.html</a></p>
<p>請從上列 Tasks 中自行選擇項目內容完成 HW3.</p>
<h1>Final Project</h1>
<p>Final Project 佔學期成績 40%</p>
<p><span style="background-color: #ffff99;">2a 與 2b 必須在 2022.01.06 上課之前完成 Final Project</span></p>
<p><a href="https://github.com/mdecourse/cad2021/discussions/8">Final Project 具體項目成果回報區</a>將於 2021.12.09 開啟, 於 <span style="background-color: #ff99cc;">2022.01.05 22:00 關閉</span></p>
<p>彈性製造系統場景設計與製作</p>
<p>請從 <a href="https://github.com/mdecourse/scenes">https://github.com/mdecourse/scenes</a> 與 <a href="https://github.com/mdecourse/models">https://github.com/mdecourse/models</a> 中選擇場景或模型, 配合 <a href="https://drive.google.com/file/d/1xb1Es8N-FxeG10OSnLNDwwi_tXyNTP9t/view?usp=sharing">cad2021_textbook.pdf</a> (登入 @gm 帳號後下載) 教材中的內容, 自選製作與組立產品, 組合成一個 Flexible Manufacturing System 系統場景.</p>
<p>彈性製造系統內容說明</p>
<h4>範例:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2qc0-yTXBts" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/PDSmRPh6TaM" title="YouTube video player" width="560"></iframe></p>
<h1>Run</h1>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/e896a4705a95ac8cc4147b355b0e87ef/raw/8954b8280c524c5781dc3c0b3565bc489d3aa3a3/cango_gear1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>